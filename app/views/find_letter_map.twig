{% extends 'base.twig' %}

{% block title %}
    Seal Seek See
{% endblock %}

{% block css %}
    <style>
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }

        #map {
            width: 100%;
            height: 100%;
            background: black;
        }

        .btn {
            position: absolute;
            width: 200px;
            height: 44px;
            left: 50%;
            margin-left: -100px;
            z-index: 999;
            bottom: 30%;
            display: none;
        }
    </style>
{% endblock %}

{% block container %}
    <div id="map"></div>

    <form action="/letter/read" method="post">
        <input type="hidden" value="{{ letter.id }}" name="letter_id" />
        <input type="submit" class="btn btn-danger" value="편지 읽기" />
    </form>
{% endblock %}

{% block script %}
    <script type="text/javascript">
        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
                center: {lat: 37.561741, lng: 126.935105},  // 연세대학교 제3공학관
                zoom: 16,
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                zoomControl: true,
                mapTypeControl: false,
                scaleControl: true,
                streetViewControl: false,
                rotateControl: false
            });

            var letterPos = new google.maps.LatLng({{ letter.latitude }}, {{ letter.longitude }});

            var letterMarker = new google.maps.Marker({
                position: letterPos,
                map: map,
                title: "{{ letter.title }}"
            });

            var myMarker = null;

            if (navigator.geolocation) {
                // TODO: options 넣었을 때 error 뜨면 그냥 넣지 말자
                var options = {enableHighAccuracy: true};
                navigator.geolocation.watchPosition(function(position) {
                    // onSuccess
                    // TODO: 나중에 로그 제거
                    console.log("Pos: " + position.coords.latitude + ", " + position.coords.longitude + " (" + position.coords.accuracy + "m)");
                    if (position.coords.accuracy > 100) {
                        // GPS 오차가 100m 보다 큰 경우 무시한다.
                        return;
                    }

                    var pos = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);

                    var distance = google.maps.geometry.spherical.computeDistanceBetween(pos, letterPos);
                    console.log("Distance: " + distance);

                    // 거리가 1km 이내면 편지 읽을 수 있게 한다.
                    var $readButton = $(".btn");
                    if (distance <= 1000) {
                        $readButton.show();
                    } else {
                        $readButton.hide();
                    }

                    if (myMarker != null) {
                        myMarker.setMap(null);
                    }
                    myMarker = new google.maps.Marker({
                        position: pos,
                        map: map,
                        icon: 'https://maps.google.com/mapfiles/kml/shapes/library_maps.png'
                    });

                    var bounds = new google.maps.LatLngBounds();
                    bounds.extend(letterMarker.getPosition());
                    bounds.extend(myMarker.getPosition());
                    map.fitBounds(bounds);
                }, function (error) {
                    {# TODO: 이거 뜨면 이 서비스 사용 못함 ㅋㅋ #}
                    switch(error.code) {
                        case error.PERMISSION_DENIED:
                            console.log("User denied the request for Geolocation.");
                            break;
                        case error.POSITION_UNAVAILABLE:
                            console.log("Location information is unavailable.");
                            break;
                        case error.TIMEOUT:
                            console.log("The request to get user location timed out.");
                            break;
                        default:
                            console.log(x.innerHTML = "An unknown error occurred.");
                            break;
                    }

                    map.setCenter(letterMarker.getPosition());
                }, options);
            } else {
                {# TODO: 이거 뜨면 이 서비스 사용 못함 ㅋㅋ #}
                map.setCenter(letterMarker.getPosition());
            }
        }
    </script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBNNrE7tuvdbalbsD2Yr8AE4ZPFOyYRgzs&callback=initMap&libraries=geometry"></script>
{% endblock %}
