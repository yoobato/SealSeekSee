<!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">

    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta http-equiv="content-language" content="ko-kr">
    <title>Seal Seek See</title>

    <link rel="stylesheet" href="/static/fonts/font.css" type="text/css">
    <link rel="stylesheet" href="/static/fonts/themify-icons.css">
    <link rel="stylesheet" href="/static/css/base.css">
    <style type="text/css">
        /* 편지 쓸 때, 지도 중간에 뜨는 마커 추가 */
        #map_for_write_letter:after {
            width: 44px;
            height: 44px;
            display: block;
            content: ' ';
            position: absolute;
            top: 50%; left: 50%;
            margin: -22px 0 0 -22px;
            background: url('/static/images/ic_marker.png');
            background-size: 44px 44px;
            pointer-events: none;
        }
    </style>
    <script src="/static/node_modules/jquery/dist/jquery.min.js"></script>
    <script src="/static/node_modules/autosize/dist/autosize.min.js"></script>
    <script>
        var activePage = function(target) {
            $('#header').toggleClass('disactive', (target === 'home'));
            if (target === 'home') {
                // 홈으로 돌아온 경우 모든 데이터 초기화
                resetAllDataInput();
            } else if (target == 'send') {
                // autosize 업데이트 (다시 minHeight으로 가도록)
                autosize.update($('.js_auto_resize'));
            }

            $("[id^=page_]").removeClass('active');
            $("#page_" + target).addClass('active')
        };

        $(function() {
            $('.js_page_toggle').on('click', function(e) {
                var _target = $(e.target);
                if (!_target.is('button')) {
                    _target = _target.parents('.js_page_toggle').eq(0);
                }
                var target = _target.data('target');
                activePage(target);
            });

            autosize($('.js_auto_resize'));
        })
    </script>
</head>
<body>
<header id="header" class="top_nav_header disactive">
    <button class="history_back_button js_page_toggle" type="button" data-target="home">
        <span class="history_back_button_icon ti-home"></span>
    </button>
    <span class="nav_logo_text">Seal Seek See</span>
</header>
{% include 'index.twig' %}

{% include 'write_letter.twig' %}

{% include 'find_letter.twig' %}

{% include 'find_letter_map.twig' %}

{% include 'read_letter.twig' %}

<div class="cover_loading">
    <div class="spinner">
        <div class="dot1"></div>
        <div class="dot2"></div>
    </div>
</div>
<script type="text/javascript">
    // 연세대학교 제3공학관
    var yonseiCoords = {
        lat: 37.561741,
        lng: 126.935105
    };

    var writeLetterCoords = {
        lat: yonseiCoords.lat,
        lng: yonseiCoords.lng
    };

    var mapForWriteLetter = null;
    var mapForFindLetter = null;

    var myMarker = null;
    var letterMarker = null;
    var geolocationWatchID = null;

    var letterMetadata = null;

    function initMaps() {
        var mapOptions = {
            center: yonseiCoords,
            zoom: 16,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            zoomControl: true,
            mapTypeControl: false,
            scaleControl: true,
            streetViewControl: false,
            rotateControl: false
        };
        mapForFindLetter = new google.maps.Map(document.getElementById("map_for_find_letter"), mapOptions);

        // 편지 쓸 때는, 지도를 두손가락으로만 스크롤 할 수 있도록 함
        mapOptions.gestureHandling = "cooperative";
        mapForWriteLetter = new google.maps.Map(document.getElementById("map_for_write_letter"), mapOptions);
    }

    function initMapForWriteLetter() {
        google.maps.event.clearListeners(mapForWriteLetter, "center_changed");

        var centerChangedAlready = false;

        mapForWriteLetter.addListener("center_changed", function() {
            var center = mapForWriteLetter.getCenter();
            writeLetterCoords.lat = center.lat();
            writeLetterCoords.lng = center.lng();
            centerChangedAlready = true;
        });

        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                console.log("[Geolocation] Get current position (" + position.coords.latitude + ", " + position.coords.longitude + ") (" + position.coords.accuracy + "m)");
                // 사용자가 먼저 지도를 움직인 경우에는 현 위치를 적용하지 않는다.
                if (centerChangedAlready === false) {
                    var myPosition = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    mapForWriteLetter.setCenter(myPosition);
                }
            });
        }
    }

    function initMapForFindLetter() {
        var letterPosition = {
            lat: Number(letterMetadata.latitude),
            lng: Number(letterMetadata.longitude)
        };


        var letterMarkerIcon = {
            url: "/static/images/ic_envelope.png",
            scaledSize: new google.maps.Size(36, 36),
            origin: new google.maps.Point(0,0),
            anchor: new google.maps.Point(0, 0)
        };
        letterMarker = new google.maps.Marker({
            position: letterPosition,
            map: mapForFindLetter,
            animation: google.maps.Animation.BOUNCE,
            icon: letterMarkerIcon
        });

        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                console.log("[Geolocation] Get current position (" + position.coords.latitude + ", " + position.coords.longitude + ") (" + position.coords.accuracy + "m)");

                var myPosition = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };

                var myMarkerIcon = {
                    url: "/static/images/ic_user.png",
                    scaledSize: new google.maps.Size(36, 36),
                    origin: new google.maps.Point(0,0),
                    anchor: new google.maps.Point(0, 0)
                };
                myMarker = new google.maps.Marker({
                    position: myPosition,
                    map: mapForFindLetter,
                    icon: myMarkerIcon
                });

                var bounds = new google.maps.LatLngBounds();
                bounds.extend(myPosition);
                bounds.extend(letterPosition);
                mapForFindLetter.fitBounds(bounds);

                // 너무 zoom이 심히게 된 경우 다시 zoom-out 시킨다.
                var zoom = mapForFindLetter.getZoom();
                mapForFindLetter.setZoom(zoom > 16 ? 16 : zoom);

                handleMyLocationUpdate(position);
                hideLoading();

                startWatchGelocationForFindLetter();
            }, function (error) {
                hideLoading();

                var errorMessage = "HTML5 Geolocation을 사용할 수 없습니다. (알 수 없는 오류)";
                switch (error.code) {
                    case error.PERMISSION_DENIED:
                        errorMessage = "HTML5 Geolocation을 사용할 수 없습니다. (위치 정보 사용 권한 거절. 브라우저 설정에서 권한을 허용해주세요.)";
                        break;
                    case error.POSITION_UNAVAILABLE:
                        errorMessage = "HTML5 Geolocation을 사용할 수 없습니다. (위치 정보를 받아올 수 없는 오류)";
                        break;
                    case error.TIMEOUT:
                        errorMessage = "HTML5 Geolocation을 사용할 수 없습니다. (위치 정보를 받아오는 도중 타임아웃 오류)";
                        break;
                }
                handleGeolocationErrorForFindLetter(errorMessage);
            });
        } else {
            hideLoading();
            handleGeolocationErrorForFindLetter("HTML5 Geolocation을 사용할 수 없으므로, 서비스를 이용할 수 없습니다.");
        }
    }

    function handleGeolocationErrorForFindLetter(errorMessage) {
        alert(errorMessage);
        activePage("receive");

        // 데이터 초기화
        letterMetadata = null;
        if (letterMarker !== null) {
            letterMarker.setMap(null);
            letterMarker = null;
        }
    }

    function startWatchGelocationForFindLetter() {
        // Start watching
        geolocationWatchID = navigator.geolocation.watchPosition(function(position) {
            console.log("[Geolocation] Watching... (" + position.coords.latitude + ", " + position.coords.longitude + ") (" + position.coords.accuracy + "m)");
            handleMyLocationUpdate(position);
        });
    }

    function handleMyLocationUpdate(position) {
        // 내 위치 업데이트
        myMarker.setPosition({
            lat: position.coords.latitude,
            lng: position.coords.longitude
        });

        // 내 위치와 편지 위치와의 거리 계산. 300m 이내인 경우에만 편지 읽을 수 있게
        var distance = google.maps.geometry.spherical.computeDistanceBetween(myMarker.getPosition(), letterMarker.getPosition());
        
        var $letterDistance = $("#letter_distance");
        $letterDistance.text("나와 편지 사이의 거리 : " + distance.toFixed() + "m");

        var $readLetterButton = $("#read_letter_button");
        if (distance <= 300) {
            $readLetterButton.prop("disabled", false);
        } else {
            $readLetterButton.prop("disabled", true);
        }
    }

    function stopWatchGeolocationForFindLetter() {
        if (geolocationWatchID !== null) {
            navigator.geolocation.clearWatch(geolocationWatchID);
            console.log("[Geolocation] Watching stopped");
            geolocationWatchID = null;
        }
    }

    $(function() {
        $("#write_letter_button").click(function() {
            initMapForWriteLetter();
            activePage("send");
        });

        $("#write_letter_form").submit(function(event) {
            event.preventDefault();

            var $form = $(this);

            var $senderPhone1 = $form.find("select[name='sender_phone_number_1']");
            var $senderPhone2 = $form.find("input[name='sender_phone_number_2']");
            var $senderPhone3 = $form.find("input[name='sender_phone_number_3']");
            // 보내는 사람 번호를 입력한 경우, 보내는 사람 번호를 사용하는 것으로 간주
            var usingSenderPhone = $senderPhone2.val().length > 0 || $senderPhone3.val().length > 0;

            var senderPhone = "";
            if (usingSenderPhone) {
                // 보내는 사람 번호는 HTML pattern 으로 체크하지 않고, js로 체크.
                if (/^\d{3,4}$/.test($senderPhone2.val()) === false) {
                    alert("보내는 사람 번호가 올바르지 않습니다.");
                    $senderPhone2.focus();
                    return;
                }
                if (/^\d{4}$/.test($senderPhone3.val()) === false) {
                    alert("보내는 사람 번호가 올바르지 않습니다.");
                    $senderPhone3.focus();
                    return;
                }
                senderPhone = $senderPhone1.val() + "-" + $senderPhone2.val() + "-" + $senderPhone3.val();
            }

            var $receiverPhone1 = $form.find("select[name='receiver_phone_number_1']");
            var $receiverPhone2 = $form.find("input[name='receiver_phone_number_2']");
            if (/^\d{3,4}$/.test($receiverPhone2.val()) === false) {
                alert("받는 사람 번호가 올바르지 않습니다.");
                $receiverPhone2.focus();
                return;
            }
            var $receiverPhone3 = $form.find("input[name='receiver_phone_number_3']");
            if (/^\d{4}$/.test($receiverPhone3.val()) === false) {
                alert("받는 사람 번호가 올바르지 않습니다.");
                $receiverPhone3.focus();
                return;
            }
            var receiverPhone = $receiverPhone1.val() + "-" + $receiverPhone2.val() + "-" + $receiverPhone3.val();

            var $title = $form.find("input[name='title']");
            if ($title.val().length === 0) {
                alert("편지의 제목을 입력해주세요.");
                $title.focus();
                return;
            }
            var $content = $form.find("textarea[name='content']");
            if ($content.val().length === 0) {
                alert("편지의 내용을 입력해주세요.");
                $content.focus();
                return;
            }

            var params = {
                sender_phone: senderPhone,
                receiver_phone: receiverPhone,
                title: $title.val(),
                message: $content.val(),
                lat: writeLetterCoords.lat,
                lng: writeLetterCoords.lng
            };

            showLoading();
            $.post("/api/letter/write", params, function(data, textStatus, jqXHR) {
                hideLoading();
                alert(jqXHR.responseText);
                activePage("home");
            }).fail(function(jqXHR) {
                hideLoading();
                alert(jqXHR.responseText);
            });
        });

        $("#find_letter_form").submit(function(event) {
            event.preventDefault();

            var $form = $(this);

            var $receiverPhone1 = $form.find("select[name='receiver_phone_number_1']");
            var $receiverPhone2 = $form.find("input[name='receiver_phone_number_2']");
            if (/^\d{3,4}$/.test($receiverPhone2.val()) === false) {
                alert("내 번호가 올바르지 않습니다.");
                $receiverPhone2.focus();
                return;
            }
            var $receiverPhone3 = $form.find("input[name='receiver_phone_number_3']");
            if (/^\d{4}$/.test($receiverPhone3.val()) === false) {
                alert("내 번호가 올바르지 않습니다.");
                $receiverPhone3.focus();
                return;
            }
            var receiverPhone = $receiverPhone1.val() + "-" + $receiverPhone2.val() + "-" + $receiverPhone3.val();

            var $word1 = $form.find("input[name='location_word_1']");
            if ($word1.val().length === 0) {
                alert("암호 단어를 입력해주세요.");
                $word1.focus();
                return;
            }
            var $word2 = $form.find("input[name='location_word_2']");
            if ($word2.val().length === 0) {
                alert("암호 단어를 입력해주세요.");
                $word2.focus();
                return;
            }
            var $word3 = $form.find("input[name='location_word_3']");
            if ($word3.val().length === 0) {
                alert("암호 단어를 입력해주세요.");
                $word3.focus();
                return;
            }

            var params = {
                receiver_phone: receiverPhone,
                word1: $word1.val(),
                word2: $word2.val(),
                word3: $word3.val()
            };

            showLoading();
            $.post("/api/letter/find", params, function(data) {
                letterMetadata = data.letter_meta;
                initMapForFindLetter();
                activePage("find_on_map");

                // geolocation 권한 불허시 다시 이 페이지로 올 수 있으므로, 데이터를 초기화 하지 않는다.
            }).fail(function(jqXHR) {
                hideLoading();
                alert(jqXHR.responseText);
            });
        });

        $("#read_letter_button").click(function() {
            var params = {
                letter_id: letterMetadata.id
            };

            showLoading();
            $.post("/api/letter/read", params, function(data) {
                var letter = data.letter;

                var $readLetterDate = $("#read_letter_date");
                var $readLetterTitle = $("#read_letter_title");
                var $readLetterContent = $("#read_letter_content");

                $readLetterDate.text("작성일: " + letter.created_date);
                $readLetterTitle.text(letter.title);
                $readLetterContent.text(letter.message);

                var $replyLetterContainer = $("#reply_letter_container");
                if (letter.sender_phone === null || letter.sender_phone.length === 0) {
                    $replyLetterContainer.hide();
                } else {
                    $replyLetterContainer.show();

                    var senderPhoneComponents = letter.sender_phone.split("-");
                    var receiverPhoneComponents = letter.receiver_phone.split("-");

                    $("#reply_letter_button").click(function() {
                        // 미리 받는 사람, 보내는 사람 번호 setting 해놓음
                        $("#write_letter_sender_phone_number_1").val(receiverPhoneComponents[0]);
                        $("#write_letter_sender_phone_number_2").val(receiverPhoneComponents[1]);
                        $("#write_letter_sender_phone_number_3").val(receiverPhoneComponents[2]);

                        $("#write_letter_receiver_phone_number_1").val(senderPhoneComponents[0]);
                        $("#write_letter_receiver_phone_number_2").val(senderPhoneComponents[1]);
                        $("#write_letter_receiver_phone_number_3").val(senderPhoneComponents[2]);

                        // 편지 읽기 화면 초기화
                        $readLetterTitle.text("");
                        $readLetterContent.text("");
                        $replyLetterContainer.hide();
                        $(this).off("click");

                        initMapForWriteLetter();
                        activePage("send");
                    });
                }

                hideLoading();
                activePage("read");

                // 데이터 초기화
                if (letterMarker !== null) {
                    letterMarker.setMap(null);
                    letterMarker = null;
                }
                if (myMarker !== null) {
                    myMarker.setMap(null);
                    myMarker = null;
                }

                stopWatchGeolocationForFindLetter();
                $("#read_letter_button").prop("disabled", true);
            }).fail(function (jqXHR) {
                hideLoading();
                alert(jqXHR.responseText);
            });
        });

        // 높이 보정... 이거 안하면 iOS Safari에서 난리남...
        var documentHeight = $(window).innerHeight();
        $("section").css("height", documentHeight + "px");
        $(window).on('resize', function() {
            var documentHeight = $(window).innerHeight();
            $("section").css("height", documentHeight + "px");
        });
    });

    function showLoading() {
        $(".cover_loading").addClass("active");
    }

    function hideLoading() {
        $(".cover_loading").removeClass("active");
    }

    function resetAllDataInput() {
        // Form 데이터 초기화
        $("form").each(function() {
            this.reset();
        });

        // 지도에서 편지 찾기 초기화
        letterMetadata = null;
        if (letterMarker !== null) {
            letterMarker.setMap(null);
            letterMarker = null;
        }
        if (myMarker !== null) {
            myMarker.setMap(null);
            myMarker = null;
        }
        stopWatchGeolocationForFindLetter();
        $("#letter_distance").text("나와 편지 사이의 거리 : ?m");
        $("#read_letter_button").prop("disabled", true);

        // 편지 읽기 화면 초기화
        $("#read_letter_date").text("");
        $("#read_letter_title").text("");
        $("#read_letter_content").text("");
        $("#reply_letter_container").hide();
        $("#reply_letter_button").off("click");
    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBNNrE7tuvdbalbsD2Yr8AE4ZPFOyYRgzs&libraries=geometry&callback=initMaps" async defer></script>
</body>
</html>
